<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Successfully registered</title>
    <style>
      body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        font-family: "Arial", sans-serif;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        background-color: #000;
        color: #fff;
        position: relative;
      }

      canvas {
        position: fixed;
        top: 0;
        left: 0;
        z-index: -1;
      }

      .content {
        text-align: center;
        z-index: 1;
      }

      h1 {
        font-size: 3em;
        margin-bottom: 20px;
        animation: fadeInUp 1s ease-out;
      }

      button {
        padding: 15px 30px;
        font-size: 18px;
        background-color: #333;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin: 10px;
        opacity: 0;
        animation: fadeInUp 1s ease-out 1s forwards;
      }

      button:hover {
        background-color: #555;
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>
  <body>
    <canvas id="stars"></canvas>

    <div class="content">
      <h1>Successfully Registered</h1>
      <button onclick="location.href='/project/users/login'">Login</button>
    </div>

    <script>
      const canvas = document.getElementById("stars");
      const ctx = canvas.getContext("2d");
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;

      class Star {
        constructor() {
          this.x = Math.random() * canvas.width;
          this.y = Math.random() * canvas.height;
          this.size = Math.random() * 2 + 1;
          this.speed = Math.random() * 0.5 + 0.1;
        }

        update() {
          this.x -= this.speed;
          if (this.x < 0) {
            this.x = canvas.width;
            this.y = Math.random() * canvas.height;
          }
        }

        draw() {
          ctx.fillStyle = "white";
          ctx.fillRect(this.x, this.y, this.size, this.size);
        }
      }

      const stars = [];
      for (let i = 0; i < 100; i++) {
        stars.push(new Star());
      }

      function animateStars() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        for (let i = 0; i < stars.length; i++) {
          stars[i].update();
          stars[i].draw();
        }
        requestAnimationFrame(animateStars);
      }

      animateStars();

      window.addEventListener("resize", function () {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
      });
    </script>
  </body>
</html>
